start-0.009 -> end-26.152 
Text:   If it's like my family, I definitely have no subjects. Hey, Daniel. Hey, Eric. Hello. Welcome back,
Eric. Thanks so much. Yeah, it's great to be here. Hi, Virginia. Hello. All right, let's kick off. I
wanted to start out with some reminders.

start-27.602 -> end-38.012 
Text:   First, we have a book club coming up on Inspired in four weeks on August 7th. I just re-read it
myself. It's a good read. It's highly aligned with how

start-38.797 -> end-66.732 
Text:   I think about product management and does a good job of explaining why some of these things are
important that I also believe to be important. So it's nice to have another voice explaining all of
that. So please do read that. I think I'm going to update the new hire onboarding doc and ask all
new hires to read this as well so that we all, everybody in the team is on the same page with
respect to this book.

start-69.326 -> end-95.811 
Text:   Let's see, reminder B, remember there's this interview spreadsheet, CS and sales have populated
that with a number of customer contacts for meetings. Please do follow up on that. I wanna ensure
goodwill with that team and follow up promptly with meetings with these customers so that that team
can see that we're taking advantage of it.

start-97.705 -> end-124.019 
Text:   Third reminder, we've got a little engagement survey. I'm going to run this once a month in Q3,
just to take a pulse, given all the change going on. Please do take a minute to fill it out. It's
five quick questions and then one free form where you can share whatever feedback you have. Fabien
didn't receive it. I'm pretty sure I went through my emails.

start-124.275 -> end-145.333 
Text:   Maybe it's on my end, but I'm happy to fill it out. You didn't get it. Need to get it to you. All
right, I'll ask Jessica to resend that to you. Is anybody else in the same condition where you did
not receive it? I don't recall, but is there a way to put the link to the survey in the agenda?

start-145.862 -> end-173.968 
Text:   Well, it's personal. It's tied back to your user ID so we can track which team you're on and that
kind of thing. I do believe it's anonymous, but nevertheless, everyone has their own custom ID. So
I'll ask Jessica to send it to Fabian and Karina. Anybody else? I hadn't seen it, Scott, but I
searched my email real quick. And it looks like that's the title of the email. So if you just search
for that in your Gmail, you should be able to find it if you got it.

start-174.991 -> end-189.036 
Text:   Pulse survey, culture amp, okay. If anybody else didn't get it, please ping me. All right. Next
reminder.

start-189.991 -> end-211.971 
Text:   We have a goal of at least three customer interviews per PM. There's an OKR issue out there. If you
haven't updated it lately, please do so. And remember, we have three weeks until Q2 to hit our goal.
So please do invest the time to get those set up and get at least three done if you haven't already.

start-213.985 -> end-243.66 
Text:   Next one, category maturity page. Last week we talked about this. Josh did a great job of creating
some new views, one of which is sort of this flow chart showing how mature we're going to be at a
given point in time, which raised questions about whether we were forecasting that accurately. If
you haven't already, please go in and either confirm that it's accurate or update it. Thanks to
Kenny for creating that issue.

start-245.367 -> end-273.78 
Text:   Somebody had a direction maturity page. You want to talk about that? Well, that was just me. Just
your reference. I was adding the link there. That's all. Oh, folks. I've seen the updates there for
the charts. Just check it out. So got it. So it's a good way you can get a sense for like, you know,
it's hard. It's hard when it's in tabular form, but when it's charted, it's much easier to see like
if it's achievable or not based on some of the trends.

start-274.087 -> end-303.49 
Text:   And there's also, if you scroll down, stays level trends as well. So you can see how your stage in
particular is trending or set to be trending. Great. Thanks, Josh. All right. Some team updates. We
hired a couple more PMs. We got a good rhythm going on hiring. We hired Gabe Weaver. He originally
came through the growth funnel, but we have a really strong candidate for that fourth slot. So we're
going to target Gabe for a third managed PM.

start-304.531 -> end-324.241 
Text:   The charter of that team is to be defined, but bottom line, we're going to have a third group in
the manage area, and Gabe will lead that. And then Dov Hershkovitz, we just hired him as the APM
Monitoring. He's got a great background in monitoring and has most recently been at Elastic.

start-326.988 -> end-356.049 
Text:   So thank you to everyone who's been involved in the hiring loop. I know it's taking a lot of energy
from everybody, but I think our hiring processes continues to pick up speed. B2B, I worked with
Christy and David Sakamoto to change some language around customer results. Just wanted to make sure
you all saw that. So there's the MR.

start-357.09 -> end-383.439 
Text:   It's got on that one. I just, the, uh, there's a, the diff highlights what is new content, I
believe. And there's one section that is great. I can totally understand why we would add that about
prioritized ruthlessly, but then the rest is, I guess, a bunch of formatting changes. And I don't
know if there's new content in any of the dog fooding. I guess the TLDR, the addition of that
prioritized ruthlessly, or is there some other, uh,

start-384.019 -> end-413.916 
Text:   point we were trying to make in this change? It's been a little while. I think there were a number
of changes. But before the handbook basically read that internal feedback is worth 10 times more
than external feedback. And I understand why we want internal feedback because of dog fooding and
using our own product. It's a great channel for feedback. But I think it was sending the message
that customers weren't nearly as important as internal opinion.

start-414.241 -> end-440.794 
Text:   And both Christie and I want to move off of that position. Like we should be customer first and
treat our own teams as a customer. But I don't want people to interpret that our own internal
opinion is worth 10 times more than a customer's opinion, if that makes sense. So it was mostly
language wherever that showed up in the handbook. Gotcha. Okay.

start-441.254 -> end-464.923 
Text:   One comment I had on this is that some of the tech seems like we should focus on core competencies
as opposed to new scope and Like as in we should focus first what we're best at so and I'm not
anyways, that's one thought I had on this but I don't remember that being the point of it. Maybe it
reads that way. I don't know. Feel free to continue to suggest tweaks the point was

start-466.237 -> end-489.753 
Text:   let's prioritize and do what matters most first. It's kind of what I've been preaching the whole
time. In your area, wherever that is, do what matters first. Don't try to do it all at once. We're
going to have to work our way through. That was the point. Yeah. I don't know if this is a follow-up
issue.

start-490.316 -> end-511.288 
Text:   The way you described it, it doesn't seem controversial, but I will say there was a big discussion
and a recent initiative from Sid and other leaders that we should heavily prioritize dog fooding
because there are teams within the company that were not utilizing our features and we wanted to
make sure that the product team was responsive to requests from them. Yep.

start-511.715 -> end-540.538 
Text:   It's a little bit different than saying it's about our internal opinion. We had always said we
should validate it. So that clarification is good that we want to make sure it's about us saying
this is in line with where we want to take the product and where we're hearing customers. But if an
internal customer wants it, the original thinking was that we should emphasize it. If the intent was
to make sure we were just clarifying that same position, but if we're saying, actually, we should
pull back from the push for more dog-fooding

start-540.776 -> end-556.783 
Text:   Please don't conflate the two. We very much still want to dog food. I think the point is when
you're thinking of customers for your thing, think of our internal teams early.

start-557.671 -> end-577.722 
Text:   You can get great feedback from them. They have an incentive to work with you. There's very little
risk in rolling out things early to them. So treat them like a customer and think of our internal
teams early as you're rolling something out. That's still very much the message. But

start-579.104 -> end-608.831 
Text:   Let's not over rotate on internal feedback or internal opinion. Let's still seek external feedback
too. Cause that's just one customer of many. Cool. Makes sense. Okay. All right. To see customer
training, discovery training coming soon. Uh, Sarah O'Donnell and her team are going to do a bunch
of sort of quick videos on a variety of customer discovery topics. So super excited for that. They
should start dropping.

start-609.65 -> end-624.48 
Text:   any day now, I think starting this week. And so we'll release those to you as they come out. We'll
embed them in the how we work description on our team page as well.

start-627.432 -> end-653.729 
Text:   All right, number three, 12-2, kickoff feedback. Josh, thanks for leading the charge. I thought you
did a good job of emceeing and sort of adding color commentary in between. I thought the screenshots
definitely helped. There were a bunch that did not have them. I was wondering why. Is it just
because we're not there yet on many of these? Yeah? Okay.

start-654.002 -> end-680.794 
Text:   Yeah, I mean some of the commentary I don't know or Nicole out of that. Yeah, many of the issues.
We're saying we're going to do UX front end and back end in the same iteration. So it hasn't started
and in some they're like I can think of a number where they're just aren't appropriate screenshots
or at least there weren't screenshots or mockups created in advance. Okay, for the purposes of front
end working on it because front end was going to work on it without a market.

start-681.152 -> end-700.265 
Text:   Okay, I'd love to get to where we're a bit ahead, so that we'll have more of these earlier and
hopefully the customer discovery flow will get us further ahead on that. In my case, some of the
features also just have no UX component. There's no UI component that could be speed-shotted.

start-700.384 -> end-729.957 
Text:   Understood. Yeah, I don't expect everyone. I mean use your judgment if it doesn't need it fine But
where we do need design it'd be great to get at least a month ahead. So As we roll into dev we have
that to offer them Scott just a quick question to you How do you feel about presenting like balsamic
or super lo-fi mock-ups on the kickoff call? Fine with that

start-730.418 -> end-756.425 
Text:   Okay, because that could be an option too for PMs that are waiting for UX to work in the same
sprint. And I know that plan's done a pretty good job, at least in the past of kind of running ahead
of UX and saying like, hey, this is kind of what I think I want this to look like before spinning UX
cycles on making a more hi fi lock up. So just if you think it does a better job of describing it
than the issue itself, then use it.

start-757.022 -> end-786.186 
Text:   I think, I think in some cases, like a picture can be worth a thousand words. I mean, no matter how
many words you throw at something, it's like, you know, for example, one of my things that I request
or I reported on for the release, uh, the kickoff meeting was, uh, uh, expanding the Epic view in
the roadmap. And like, those are basically just a bunch of buzzwords put together that you're like,
okay, what does that mean? Expand Epic. And I'm just, I literally thought on that one for like 20
minutes saying, how do I make this epic? How do I make this issue title like more descriptive for
customer value?

start-786.186 -> end-813.029 
Text:   And it just came down to, like, that is the functionality we're adding. What does that mean? Oh,
here's the screenshot. You can see that we're going to add a dropdown. You can see the issues and
children epics that are attached to that epic. And in that case, I was like, I'm so thankful I have
a screenshot, even though that one is actually not a Hi-Fi mock-up. It's more lo-fi. It was a little
bit pieced together. So yeah, I think in general, there's a lot more value if we can show something
like that.

start-813.387 -> end-841.732 
Text:   product managers, you can consider that. You should feel free that you're empowered to take a tool
that you're comfortable with, even if it might even be just like Google Slides and make something
that gets you at least a part of the way there in terms of what you want the experience to look
like. Yep. Perfect. 3C, I thought the talk track shifted. It was definitely more problem focused. I
noticed a number of speakers really trying to zero in on that, which is perfect.

start-841.903 -> end-866.664 
Text:   some of them could have been more problem focused, I thought. So just keep, keep considering that
as you, as you, you know, it's important to be able to pitch these things in ways that people that
aren't close to it can understand. And so just think about that. How do I explain this to someone
who's cold, who doesn't know a darn thing about this? Why should they care? That

start-866.834 -> end-892.858 
Text:   getting that crystal in your thinking is going to be important no matter what. So it's time all
spent. Hey Scott, this is Karina. Just to add to that, if you don't mind. I think this has always
been a challenge in product even before I joined GitLab for many people is how to get there on some
of this terminology when those of us have deep technical background.

start-893.166 -> end-917.944 
Text:   My thought would be, is there a way that you can start sharing, you know, or applauding good
examples of this so that the product team can start to kind of ruminate on this and develop that
skill if we're not there yet? Yeah, I thought Lucas were very well framed up. Those two popped out
at me as, yeah, that's the problem we're trying to solve.

start-920.64 -> end-950.64 
Text:   Check those out. I'll look through for some other examples. Thank you for the suggestion. All
right, 3D, we went long. We just have a ton of speakers, which I love that lots of people get a
chance to speak. So I'm good with that. But we're going to have to limit the number of items,
probably.

start-951.374 -> end-979.701 
Text:   So it looks like there's some other ideas in here, perhaps themes. Yeah, I mean, if there are some
that relate to each other, you could tell a story. Hey, we're trying to prove this, and then A, B,
and C tie back to it. I think it's okay to be pretty brief in your description, as long as you're
hitting what it is, and if somebody's really interested, they can dive deep. Thematic is a good
idea. Recorded video, if you really wanna go deep,

start-980.196 -> end-1004.616 
Text:   Maybe it's technically complex. That's a great idea. And then you can just cover the customer value
at a high level and leave the detail to the video. Watch statistics. I think Josh looked this up
last time. I think he said there were 1,000. Oh, there we go. Kenny's putting them in. So somewhere
between 500 and 1,000.

start-1009.906 -> end-1036.834 
Text:   To kind of add to the time, just a feedback. I was timing myself this time and I had two features
listed and I hit three minutes and 14 seconds. Obviously it has shortened that. So when we talk
about, you know, I think somebody mentioned doing two or coupling it down. It's interesting that I
landed there with the two that I chose. Yep. That feels about average, but we've had

start-1037.244 -> end-1061.186 
Text:   and how many speakers. We'll probably have to be a couple minutes max per person. I mean, Eric
pointed this out in the next line. I do think we are due for a rethink of how we're doing the
kickoff, because next month we're going to have 25 people trying to give content. And even at two
minutes, you're already gone. Yeah, maybe we expand it.

start-1062.022 -> end-1083.217 
Text:   I will give a shout out for Jason. I know because he's on paternity leave created a video but I
think the original intent of the kickoff was actually just as a company we had a retrospective and a
kickoff or retrospective immediately followed by a kickoff and we just decided to post that on
YouTube. We now post a whole bunch of content on YouTube. So just

start-1083.626 -> end-1112.073 
Text:   Just having what you would normally do for your kind of like grooming or kickoff within your
individual group posted to YouTube and us maybe having a specific channel for people who wanted to
follow it. We should discuss it in an issue and come up with something I do think prior to next
release kickoff. Just to evaluate alternatives to the format. Yeah, I mean, I don't even if we said
every person has one minute.

start-1112.602 -> end-1140.623 
Text:   I feel like we're doing a disservice because we're now highlighting much less because we feel like
we have a time constraint and need to keep it into one synchronous 30 minute block when there's no
need to do that. Okay. Plus one revamping it. I think, I think we're trying to, it's like, it's got
so many jobs right now that we're not doing a good job at any of them. Um, I think,

start-1140.896 -> end-1167.739 
Text:   Gutfeild is the most important customer is our internal. And it's just like communicating
internally about, cause like people attend that thing, man. Um, we had like 50 people on the zoom
call, um, alone, not even considering YouTube. People were asking about what happened to YouTube
link and things like that. So, um, it's, it's well attended internally. I think there's alignment,
let alone the marketing value of like a sort of like a release,

start-1168.951 -> end-1185.179 
Text:   I mean, for customer customers, it kind of feels like you're better off having like a webinar or
live stream on the release day or something like that. Right. Yeah, maybe the externally focused one
would be more about what we just shipped.

start-1187.21 -> end-1210.06 
Text:   There was a webinar that used to happen called Release Radar. I think I participated in a couple of
those, three of them back to back, and they were pretty poorly attended from what my experience was,
and I think they actually got ended by the product marketing team for that reason. I'm sure someone
from that team could actually give feedback.

start-1210.401 -> end-1237.125 
Text:   I think one thing about the time limit is it's really hard to motivate problems, particularly in a
short amount of time, particularly when they're very technical. As product categories grow in
maturity and sophistication, the problems become more and more specific that we're solving. And so
motivating those specific reasons and why we're going after this specific tiny piece of a very
mature category, it's hard to do in 30 seconds.

start-1237.125 -> end-1265.981 
Text:   in a way that, so if we're wanting to do that better, that's gonna put more and more pressure on
communicating a reasonable number of items, I think. Okay. Thank you all for the feedback. I like
the idea of creating an issue and perhaps tweaking the format before next month. I also like the
idea of asking internal and external constituents what they like or don't like about the format.

start-1266.459 -> end-1291.715 
Text:   Yeah, just one final thought on that. Like, um, I love that it's a half an hour might almost even
like take pick particular categories over, over, uh, um, linking the time as an example, just
because I feel the feeling, I had a feeling that if you want to watch it consistently, it's going to
be in that blog, but that's just me. So like if, uh, you know, other customers are, uh, you know,

start-1292.108 -> end-1315.538 
Text:   saying they would like the larger block, then that's the right way to go. So that's where I'd love
to get feedback in some fashion, to say, OK, here's how we should change it. But we clearly have
gone breadthwise. We've gone so much broader that it's going to be hard to cover all those topics in
a quick amount. OK. Thanks, Kenny, for starting the issue. James, over to you for number four.

start-1317.79 -> end-1334.599 
Text:   Yeah, I just thought I'd share this. I think many on this call haven't heard Mark Punsback speak
about product discovery spritz, but he advocated for this quite a number of times previously from
his experience running these at a prior company.

start-1334.667 -> end-1358.797 
Text:   So the idea is kind of different to a UX discovery sprint. I think Fabian linked one of the books
about that where it's really focused on UX iteration and research. The product discovery sprint is
more focused on kind of like actually building something, iterating on something that's built and
trying to get to some sort of MVC really quickly by trying to make the process more synchronous.

start-1359.258 -> end-1372.432 
Text:   So the source code group is going to try and do that around file by file diff navigation to solve
performance and usability problems in 12.3.

start-1372.807 -> end-1399.855 
Text:   And I thought it'd be interesting to share that because internally we've been wrestling with like
how to make this work well in an async slash remote environment. So we're looking at trying to
confine the participants in a specific time zone so that we can all be available with a significant
amount of overlap. But that's also difficult because we have, it kind of excludes automatically 50%
of the team who are just geographically remote from

start-1399.855 -> end-1426.561 
Text:   any of their peers. We only have one UX designer that's only available in the European time zone.
So some interesting challenges there. If it goes well, we're going to try and replicate it a release
or two later on a different problem that is also really complicated and hard and we're going to make
progress on quickly. But I'll share any findings we have. And if anyone's interested in discussing
that with me more, put a meeting in my calendar or drop me a message. This is great, James.

start-1427.022 -> end-1451.698 
Text:   By the way, I think the UX team is going to run. Well, let me just say we have the option to run
one with Google Ventures, who's one of our investors in that sprint book that Fabian linked to, was
written by a guy from GV. They did hundreds of these things for their clients. They know what
they're doing. So if we get a chance to do one with them, we should.

start-1453.985 -> end-1468.746 
Text:   We're going to have to figure out how to do it within our basic model, though. So whatever you
learn from yours, James, please feed that back. Super interesting topic. I think if we could get
good at this asynchronously, that would be a breakthrough.

start-1469.514 -> end-1496.971 
Text:   Yeah I think one other interesting challenge is that the sprint sort of terminology is kind of
challenging and like it's not sustainable to be doing design sprints or discovery sprints on a daily
basis. Whether or not we were in person or not it's not scalable to actually sprint all the time. So
choosing the right tasks, choosing the right time is I think one of the other challenges. I agree
yeah you don't want to do this for everything because

start-1497.278 -> end-1524.172 
Text:   Well, if you follow to the letter, it takes a whole week and you're totally dedicated to it, which
is amazing for focus sake, but you can't get anything else done. So depending on how we structure
this, it would need to be done for things that are really big unknowns where dedicating a big chunk
of time like that is worth it and not everything clears that bar.

start-1525.93 -> end-1554.087 
Text:   I think it's also most relevant for, for stages that are very, in various stages in the very
beginning, kind of like that Tyrone was like one of their biggest example for Google Ventures when
they obviously like solving clinical trials for the world is like super complex problems. So they
just figured out what is this thing that we can do so that we can start getting there. And I think
these are the sort of problems that, that the design is useful.

start-1554.753 -> end-1581.118 
Text:   We used it pretty successfully at my last company around pricing and packaging stuff and ran a
bunch of interviews with customers on that. So I've seen it work. All right. Okay, Christopher,
number five. Yeah, just want to call out. We've over the past month, we've had a significant number
of, uh,

start-1581.613 -> end-1596.101 
Text:   outages related to .com and that affected at least one customer revenue potential. And because of
that, you know, we've had some focus from an executive leadership perspective. So I encourage
everybody to look at that document.

start-1596.459 -> end-1623.148 
Text:   You kind of look through it, and particularly there's a couple things from an engineering
perspective make you aware of. One is we started infrastructure to development board where we're
going to start matching issues up and trying to make sure that those get prioritized highly where
appropriate, particularly for anything that, you know, affects performance around these issues. The
other issue that I put in there was one around

start-1623.302 -> end-1636.834 
Text:   That's listed specifically, which is around the fact of prioritizing P performance availability
work. So one of the significant features of this particular recent outage last week was is that the
Redis server apparently

start-1637.125 -> end-1654.804 
Text:   Can't handle the load anymore and we started digging into we found a bunch of stuff that we hadn't
checked like for instance It's an example rj unit tests were basically going and getting cached And
there was no limit on the number of unit tests that could actually be cash So we were getting these
like blocks of like several megabytes of data that had to basically be transferred around and read
us and

start-1655.111 -> end-1684.189 
Text:   And that's really what's affecting its performance overall from a caching service perspective. So
consequently, Scott, I send that to you. I hope that's OK. Because it feels like you need to help
out in regards to the fact of how do we best make sure that we get this kind of systematically
going. And I just want to make sure that everybody was aware and just kind of open up for discussion
if there were any questions or any feedback, early feedback on it from that perspective. I added
some comments to it, Christopher.

start-1684.445 -> end-1700.606 
Text:   Okay, I haven't had a chance to look. I apologize about that problem. Can I ask do we and maybe
Mac. This is a question for you. Do we categorize performance issues as bugs. We do have a
performance label, but they should be under under box.

start-1701.186 -> end-1728.609 
Text:   Okay. This is an example where oftentimes the way we would treat performance is a reactionary. This
is trying to think about it more in a proactive way. So like as an example, I'll give a horrible
example, but when I worked at Amazon tags, originally when Amazon was created, tags were, they were
expected them just to label certain instances and that was it. And it turns out that all customers
started using like 20 and 30 or 50 tags. And they're like, what the heck's going on?

start-1728.609 -> end-1745.998 
Text:   Tags were being used to basically share environmental information so the VMs could they could put
the same drop of code on two different VMs and they could behave differently based on the tag Which
was a total novel way for customers to use it So then they had to basically limit the number of tags
they could use because it wasn't scaling with the system effectively

start-1746.015 -> end-1761.118 
Text:   So, like, this is kind of another example where, like, I think we've got to start thinking in terms
of, you know, like, when we create something new, a new feature, a piece of functionality, like,
what's the cost associated with that, right? Because, like, it does cost something internal.

start-1761.118 -> end-1787.125 
Text:   Product managers to necessarily think in terms of the exact bytes But I am starting to think in
terms of like, you know, what are the expectations around because like as an example if we went back
and looked at G unit tests and reporting, you know, if we said unlimited that's you know, that's a
tough engineering call, right? Particularly I guess it's free right now for customer service is my
understanding. We also don't have Number of repos mirror. We don't have a limit on that and that
that seems dangerous and

start-1787.858 -> end-1815.401 
Text:   Yeah, so I guess I would comment, you know, I think the product team is expected to prioritize all
things and to understand them deeply, whether they're a security issue or performance concern. I
think what you're highlighting is in order to be proactive. I don't know if the product team would
immediately know the impact of a proposed change, but maybe that's an opportunity for our
infrastructure SRE stable counterparts to be involved in

start-1815.879 -> end-1837.5 
Text:   vetting and looking at issues early in the pipeline to decide whether or not they would Yeah, or or
let's say we're implementing a feature like let's say we were implementing mirroring from scratch.
Like the first question we should be asking is is like how many How many mirrors as a customer
expected to be able to support and what I want to start charging for if they get above a certain
limit. And, you know, And right now we don't. And you could argue that

start-1838.012 -> end-1865.896 
Text:   Scaling is just as much a reason for customers to start paying us as feature sets. That's kind of
the argument I would be making. Because those things cost money, whether we like to admit it or not.
Yeah, Christopher, I would agree with you on what you're trying to sort of shape up and call out
here in the sense of going through pages, for example, performance of getting those pages loaded.

start-1866.476 -> end-1887.756 
Text:   is not great. And I don't know if we set out originally to track some of those performance things.
But I think that performance and to your point, Kenny, I think performance should be somewhere
incorporated as we move forward and something we should be thinking about for scalability across the
board.

start-1888.029 -> end-1917.995 
Text:   because it's just as important as bringing forth that really cool thing to them, is that that
really cool thing works and people will stay there to use it. I think just as a cycle, I think we
have something, the product end book that I read like a couple days ago on performance, something
like fast applications are like always, you know, like more usable. And I think that's definitely
important. And I also think that

start-1918.422 -> end-1947.432 
Text:   GitLab.com is massive. I think we have 4 million users. And for example, for Geo, I know that only
by actually interacting with the infrastructure, we are getting feedback on some of the performance
bottlenecks that we are just not seeing otherwise. And so I think that's actually also really
valuable. And in that regard, maybe also, like again, dog fooding, these things helps. And I think
with the combination of CD, we may hit a lot of those things at the

start-1948.353 -> end-1976.357 
Text:   Yeah, and the dog fooding thing on that front is a little confusing to me. I met with Marin to talk
about that. And, you know, there's sort of this mentality of looking at dot com first, or leading
with dot com for scalability. And I just, it's not really crisp to me where we're going from making
sure that we're, you know, how we approach making sure that we intact scalability for dot com. If
we're starting with dot com, are we starting somewhere else?

start-1978.08 -> end-1994.445 
Text:   I'm pretty sure the handbook says that we're meant to release the guidelines used to be that for
new features that were meant to be available on GitLab.com and self-hosted at the same time and that
there used to be a production ready checklist.

start-1996.305 -> end-2019.633 
Text:   that I think the engineering team was responsible for. I know that for when we launched in Jio,
there was a production readiness process that we had to go through. And certainly with Giddily, we
consider these things. On the source code front, we're regularly considering scale, like moving
terabytes of data from the database into object storage and considering all these sorts of things.
Performance is very much a feature and should be considered that. And I think

start-2019.855 -> end-2029.94 
Text:   particularly in categories where adoption is still growing and in early stages of maturity,
performance understandably is less of a concern because there's lower usage.

start-2031.015 -> end-2049.94 
Text:   like solving scale at like an enormous level doesn't make sense commercially, like necessarily when
usage is small. So there is a bit of a juggling act here because we don't want to build a product
for billions of users if there's only, I don't know, 20,000 users experimenting with our newest
feature. So there's a,

start-2049.94 -> end-2079.548 
Text:   there's an iterative approach that needs to be taken. But I would agree that particularly coming
from a team that's digging out a lot of technical debt and solving a lot of performance problems all
the time, we've probably historically not been very good at picking the right moment to pay off
technical debt and address performance problems until they become fires. So. Yeah. So to that point,
just real quick, James, and sorry, Scott, I think some things are obvious. Like when we look at our
progressive deliveries,

start-2080.469 -> end-2097.329 
Text:   Strategy. I think that we like if you look at something like feature flags or something like that,
like that's something that I think is going to be like I wouldn't imagine that that's not going to
be a key feature that we're going to bring forward. So I feel like that that should be a gimme on
whether adoption has yet struck or not.

start-2097.688 -> end-2113.012 
Text:   But the second thing that is not clear to me, like, again, when I was interviewing Marin about dog
fooding, is that I noticed that Marin's like, we don't, this isn't, we weren't, they didn't come to
us first. And so this is not scalable, or this is not usable for us internally.

start-2113.012 -> end-2141.783 
Text:   And so it's like the approach and process moving forward to dog food in the right spots is not
clear to me or you know what the best practice has been or if anybody's, you know, crack that. Yeah,
I can give a concrete example because I did a call with Marin a few months back around confidential
merge requests. So we knew that customers wanted to resolve them. We knew that we wanted to do that
and that we're trying to get rid of dev.gitlab.org. So I had a video call with him and a bunch of
async conversations with like

start-2141.783 -> end-2170.623 
Text:   I've got these ideas for what a first iteration looks like. And then we did a few calls and worked
through them and worked out which were the things that needed to happen. And so we're shipping the
first iteration of that in 12.1. But we coordinated with them and I spoke with Maron quite a lot to
make sure whatever we were building was useful and would solve the security problems that they had
as well as our own ones. So yeah, I agree. It needs to be proactive. We're not going to ship
something's useful or that the infrastructure team is going to want to opt into unless we've had a
conversation with them in advance.

start-2172.517 -> end-2199.735 
Text:   All right. Can I add one last tiny point? It's sometimes really important for customers as well
that we're running it on GitLab.com before they adopt it. So one example is we built SSL TLS support
in Githili, but it's not turned on in GitLab.com. And so the customer that we built it for isn't
using it because they're waiting for our production team to turn it on because they want to see
before they turn it on for their enormous instance,

start-2200.896 -> end-2226.664 
Text:   have we actually proven it at the world's largest GitLab instance scale? So I think that's one
important reason why we always need to make sure that features are on and are getting used on
GitLab.com. Sorry, I've got a couple of things. I think we definitely need to have a stronger
definition of done as part of our progressive delivery, right? And so part of the definition done is
it needs to run at scale on GitLab.com successfully.

start-2226.92 -> end-2256.357 
Text:   and not blow up the cost model, not blow up performance. And if it does, it's just getting
reverted, frankly. And that should be the bar for getting features across the line. That doesn't
mean for new features, you know, that have low usage that, you know, obviously they're impact will
be quite small. But still, it needs to be within reason. I totally agree that you don't want to
overbuild on the first iteration for planning for millions of users. That doesn't make any sense.
But yeah, I think that's one aspect. I think their aspect is that

start-2257.039 -> end-2285.299 
Text:   on your comment Christopher on pricing and we can maybe have a follow up here on like a handbook
update but I think it's interesting that customers will absorb the cost on self-managed of compute
and so for them if they want to have a ridiculous number of you know mirrors then you know then it's
fine because they're paying for it's our use case it's all in their dime and so maybe a way to think
about this is to have some level of controls you can set if you want to at the instance level of
sort of

start-2286.067 -> end-2311.22 
Text:   I don't have some way to control that amount of behavior for when we're covering the cost of those
things. But yeah, anyways. Thank you all. Great topic, Christopher. Please pile on that issue with
thoughts on how to handle this. I like your suggestion on definition of done, Josh. All right,
Karina, six and seven.

start-2312.125 -> end-2330.589 
Text:   Yes, so I submitted an MR for the Product Tenbook yesterday and we're going through this process of
getting more self-organized in the release area and with our engineering and user design partners.

start-2331.186 -> end-2360.691 
Text:   And, you know, one of the things that we recognize, and it's documented in the issue below in
number seven, is, you know, one, our delivery percentage has not been great, which you've heard me
talk about. But the team has been on a ramp that we need to self-organize around some method. And
what we found in sort of the last prioritization for release scope is that we have a lot of
oversized issues and features that

start-2360.981 -> end-2387.995 
Text:   you know, honestly need a need a beat or a release to go through user research. Maybe look at the
code if they've never seen the code look, you know, reviewed that piece of code before or makes the
recommendations on the best way to solve. So I put some thinking around, you know, that sort of, you
know, that dual track mindset, dual track agile kind of launching off of what user experience has
recently updated for dual track agile.

start-2388.609 -> end-2414.906 
Text:   So feedback on that. And then the second piece is that this experiment running is we're leveraging
semi dual track agile approach just to organize our conversation. How we open issues for areas that
we need a discovery beat versus presenting an issue that is actually ready for delivery. One thing
that was interesting, Scott, and we were talking about

start-2415.52 -> end-2445.52 
Text:   you know, just the kickoff call and having some, you know, images and more to share. That's
definitely where I think we'd like to be with release is getting ahead of that curve and really
having some concrete understanding and prototypes of what we're trying to present and deliver. But
when we looked at sort of kind of going through that process, you know, this is really for complex
things or heavy lifting because, you know, it is about a 20 to 30 day lead time to commit.

start-2445.725 -> end-2475.094 
Text:   So we have some targets to improve our hypothesis on leveraging this. You can follow it there if
you have input, but they kind of tie together. But I love input on the handbook piece. Thank you,
Karina, for creating these and sharing these. I think you're on the right track. In parallel, I've
been working with Christopher and Eric and Christy to outline

start-2475.589 -> end-2503.302 
Text:   a high level description of our software development lifecycle, which will have two tracks. This is
sort of competing content there, or maybe they could be merged. So thank you for doing this. I may
slow roll it a little bit to make sure that we have one way of describing the flow we'd like to go
through. But thank you very much for getting it kicked off. Any questions for Karina?

start-2506.613 -> end-2531.596 
Text:   If not, Josh, over to you. Yeah, just a super basic announcement. I just went through and renamed
the promise label to planning priority. General meaning is largely the same, although we shouldn't
be promising features. And so this is just a way to flag it. And that way, it's a reminder for PMs
that this issue had some important select conditional dependencies. And so just be aware of it so
you can feel free to use it.

start-2531.903 -> end-2559.36 
Text:   I did note in the label text that it should only be applied by product managers and in particular
the responsible product manager for that section. So it shouldn't get applied by TAMs or anyone
else. Awesome. I like that terminology a lot better. Thank you, Josh. All right. Five minutes to
spare. Anything else? If not, have a great Tuesday. Adios.